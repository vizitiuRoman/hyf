syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = ".;proto";

service UserSVC {
  rpc GetUsers(GetUsersIn) returns (GetUsersOut) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "UserSVC";
      summary: "Return the users";
      description: "Return the users";
    };
    option (google.api.http) = {get: "/v1/users"};
  }

  rpc GetUser(GetUserIn) returns (GetUserOut) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "UserSVC";
      summary: "Returns a user";
      description: "Returns a user by id.";
    };
    option (google.api.http) = {get: "/v1/users/*"};
  }

  rpc UpdateUser(UpdateUserIn) returns (UpdateUserOut) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "UserSVC";
      summary: "Update the user";
      description: "Update the user. Returns an updated user.";
    };
    option (google.api.http) = {
      put: "/v1/users"
      body: "*"
    };
  }

  rpc DeleteUser(DeleteUserIn) returns (google.protobuf.Empty) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "UserSVC";
      summary: "Delete the user";
      description: "Delete the user.";
    };
    option (google.api.http) = {delete: "/v1/users/*"};
  }
}

message User {
  int64 id = 1;
  string name = 2;
  string last_name = 3;
  string email = 4;
  string password = 5;
}

// ----------------- GetUsers -----------------

message GetUsersIn {}

message GetUsersOut {
  repeated User users = 1;
}

// ----------------- GetUser -----------------

message GetUserIn {
  int64 id = 1;
}

message GetUserOut {
  User user = 1;
}

// ----------------- CreateUser -----------------

message CreateUserIn {
  User user = 1;
}

message CreateUserOut {
  User user = 1;
}

// ----------------- UpdateUser -----------------

message UpdateUserIn {
  User user = 1;
}

message UpdateUserOut {
  User user = 1;
}

// ----------------- DeleteUser -----------------

message DeleteUserIn {
  int64 id = 1;
}

message DeleteUserOut {}
